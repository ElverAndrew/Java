/**
 *
 * @author Elver Andrew Quevedo Valer
 */

package molinoscomolsa;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Element;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Comolsa extends javax.swing.JFrame {     

    DefaultTableModel modeloTabla = new DefaultTableModel();
    int numFila;
    
    Document documento;
    FileOutputStream archivo;
    Paragraph titulo;
    
    Document documento1;
    FileOutputStream archivo1;
    Paragraph titulo1;
    
    Document documento2;
    FileOutputStream archivo2;
    Paragraph titulo2;
    
    int sueldoBruto;
    double descSNP, bonifi, sueldoNeto;
         
    private final ArrayList<InformaciÃ³nTrabajador> Lis;
    public Comolsa() {
        Lis = new ArrayList<>();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Molinos COMOLSA");
        llenarTabla();
        
        documento = new Document();
        titulo = new Paragraph("Molinos COMOLSA");
        
        documento1 = new Document();
        titulo1 = new Paragraph("Cheque de pago");
        
        documento2 = new Document();
        titulo2 = new Paragraph("Molinos COMOLSA");
       
        
    }
    private void llenarTabla(){ 
        modeloTabla.addColumn("Apellidos");
        modeloTabla.addColumn("Nombres");
        modeloTabla.addColumn("Estado civil");
        modeloTabla.addColumn("Horas trabajadas");
        modeloTabla.addColumn("Valor de Hora");
        modeloTabla.addColumn("Sueldo Bruto");
        modeloTabla.addColumn("Descuento SNP");
        modeloTabla.addColumn("Bonificacion");
        modeloTabla.addColumn("Sueldo Neto");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Apellidos = new javax.swing.JLabel();
        RecibirApellidos = new javax.swing.JTextField();
        Nombres = new javax.swing.JLabel();
        RecibirNombres = new javax.swing.JTextField();
        Estadosciviles = new javax.swing.JLabel();
        RecibirEstaCivil = new javax.swing.JComboBox<>();
        Horasdetrabajo = new javax.swing.JLabel();
        RecibirHoras = new javax.swing.JTextField();
        Valordehoras = new javax.swing.JLabel();
        RecibirValorHora = new javax.swing.JTextField();
        Botonguardar = new javax.swing.JButton();
        BotonVaciar = new javax.swing.JButton();
        BotonEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tablatrabajo = new javax.swing.JTable();
        Calendar = new javax.swing.JButton();
        BotonBorrartabla = new javax.swing.JButton();
        BotonReporte = new javax.swing.JButton();
        BotonCobrar = new javax.swing.JButton();
        BtonGuardar = new javax.swing.JButton();
        BtonCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 255)));

        Apellidos.setBackground(new java.awt.Color(0, 0, 0));
        Apellidos.setForeground(new java.awt.Color(0, 0, 0));
        Apellidos.setText("Apellidos");

        RecibirApellidos.setBackground(new java.awt.Color(255, 255, 255));
        RecibirApellidos.setForeground(new java.awt.Color(0, 0, 0));

        Nombres.setForeground(new java.awt.Color(0, 0, 0));
        Nombres.setText("Nombres");

        RecibirNombres.setBackground(new java.awt.Color(255, 255, 255));
        RecibirNombres.setForeground(new java.awt.Color(0, 0, 0));

        Estadosciviles.setForeground(new java.awt.Color(0, 0, 0));
        Estadosciviles.setText("Estado civil");

        RecibirEstaCivil.setBackground(new java.awt.Color(255, 255, 255));
        RecibirEstaCivil.setForeground(new java.awt.Color(0, 0, 0));
        RecibirEstaCivil.setMaximumRowCount(5);
        RecibirEstaCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Opciones--", "Soltero(a)", "Casado(a)", "Divorciado(a)", "Viudo(a)", " ", " " }));
        RecibirEstaCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecibirEstaCivilActionPerformed(evt);
            }
        });

        Horasdetrabajo.setForeground(new java.awt.Color(0, 0, 0));
        Horasdetrabajo.setText("Cantidad de horas trabajadas");

        RecibirHoras.setBackground(new java.awt.Color(255, 255, 255));
        RecibirHoras.setForeground(new java.awt.Color(0, 0, 0));

        Valordehoras.setForeground(new java.awt.Color(0, 0, 0));
        Valordehoras.setText("Valor de hora");

        RecibirValorHora.setBackground(new java.awt.Color(255, 255, 255));
        RecibirValorHora.setForeground(new java.awt.Color(0, 0, 0));

        Botonguardar.setBackground(new java.awt.Color(51, 153, 255));
        Botonguardar.setForeground(new java.awt.Color(51, 153, 255));
        Botonguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add (1).png"))); // NOI18N
        Botonguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonguardarActionPerformed(evt);
            }
        });

        BotonVaciar.setBackground(new java.awt.Color(51, 153, 255));
        BotonVaciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/remove.png"))); // NOI18N
        BotonVaciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVaciarActionPerformed(evt);
            }
        });

        BotonEditar.setBackground(new java.awt.Color(51, 153, 255));
        BotonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/list_edit.png"))); // NOI18N
        BotonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEditarActionPerformed(evt);
            }
        });

        Tablatrabajo.setModel(modeloTabla);
        Tablatrabajo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(Tablatrabajo);

        Calendar.setBackground(new java.awt.Color(51, 153, 255));
        Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calendar_view_month.png"))); // NOI18N
        Calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalendarActionPerformed(evt);
            }
        });

        BotonBorrartabla.setBackground(new java.awt.Color(255, 255, 255));
        BotonBorrartabla.setForeground(new java.awt.Color(0, 0, 0));
        BotonBorrartabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/eraser.png"))); // NOI18N
        BotonBorrartabla.setText("Borrar");
        BotonBorrartabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBorrartablaActionPerformed(evt);
            }
        });

        BotonReporte.setBackground(new java.awt.Color(255, 255, 255));
        BotonReporte.setForeground(new java.awt.Color(0, 0, 0));
        BotonReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/print.png"))); // NOI18N
        BotonReporte.setText("Reporte");
        BotonReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonReporteActionPerformed(evt);
            }
        });

        BotonCobrar.setBackground(new java.awt.Color(255, 255, 255));
        BotonCobrar.setForeground(new java.awt.Color(0, 0, 0));
        BotonCobrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/check.png"))); // NOI18N
        BotonCobrar.setText("Cobrar");
        BotonCobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCobrarActionPerformed(evt);
            }
        });

        BtonGuardar.setBackground(new java.awt.Color(255, 255, 255));
        BtonGuardar.setForeground(new java.awt.Color(0, 0, 0));
        BtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/check.png"))); // NOI18N
        BtonGuardar.setText("Guardar");
        BtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtonGuardarActionPerformed(evt);
            }
        });

        BtonCancelar.setBackground(new java.awt.Color(255, 255, 255));
        BtonCancelar.setForeground(new java.awt.Color(0, 0, 0));
        BtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exi.png"))); // NOI18N
        BtonCancelar.setText("Cancelar");
        BtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtonCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Rockwell Extra Bold", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Reporte de trabajadores");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(BotonBorrartabla)
                        .addGap(27, 27, 27)
                        .addComponent(BotonReporte)
                        .addGap(164, 164, 164)
                        .addComponent(BotonCobrar)
                        .addGap(28, 28, 28)
                        .addComponent(BtonGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(BtonCancelar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RecibirValorHora, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(275, 275, 275)
                                .addComponent(Botonguardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonVaciar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BotonEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Calendar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RecibirApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Apellidos)
                                    .addComponent(Horasdetrabajo)
                                    .addComponent(RecibirHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Valordehoras))
                                .addGap(153, 153, 153)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Estadosciviles)
                                    .addComponent(RecibirEstaCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RecibirNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nombres)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Apellidos)
                    .addComponent(Nombres))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RecibirApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RecibirNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Horasdetrabajo)
                            .addComponent(Estadosciviles))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RecibirHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RecibirEstaCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Valordehoras)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RecibirValorHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BotonVaciar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BotonEditar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Calendar, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(Botonguardar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonBorrartabla)
                    .addComponent(BotonReporte)
                    .addComponent(BotonCobrar)
                    .addComponent(BtonGuardar)
                    .addComponent(BtonCancelar))
                .addGap(121, 121, 121))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static String fechaActual(){

        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
    
        return formatoFecha.format(fecha);
}             

    private void RecibirEstaCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecibirEstaCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RecibirEstaCivilActionPerformed

    private void BotonguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonguardarActionPerformed

        String variable = (String) RecibirEstaCivil.getSelectedItem();
        int horas, valorHoras; //Variables
        try{
            horas = Integer.parseInt(RecibirHoras.getText());
            valorHoras = Integer.parseInt(RecibirValorHora.getText());
            
            sueldoBruto = horas*valorHoras;
            descSNP = 0.13*sueldoBruto;
          
            Object[]arreglo = new Object[9];
            arreglo[0] = RecibirApellidos.getText();
            arreglo[1] = RecibirNombres.getText();
            arreglo[2] = RecibirEstaCivil.getSelectedItem();
           
            if(variable.equals("Casado(a)")){
                bonifi= 0.07*sueldoBruto;
            }
                
            else{
                bonifi=0;
            }
            sueldoNeto = sueldoBruto - descSNP + bonifi;
            arreglo[3]= RecibirHoras.getText(); 
            arreglo[4]= RecibirValorHora.getText(); 
            arreglo[5]= "S/. "+ sueldoBruto; 
            arreglo[6]= "S/. "+ descSNP;
            arreglo[7]= "S/. "+ Math.round(bonifi);
            arreglo[8]= "S/. "+ sueldoNeto;
            modeloTabla.addRow(arreglo);
            RecibirApellidos.setText("");
            RecibirEstaCivil.setSelectedIndex(0);
            RecibirNombres.setText("");
            RecibirHoras.setText("");
            RecibirValorHora.setText("");
            
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Verifica los datos ingresados, no deje casillas en blanco.");
        }
    }//GEN-LAST:event_BotonguardarActionPerformed

    private void BotonVaciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVaciarActionPerformed

        int confirmacion1;
        boolean confirmacion2 = false;
        numFila = Tablatrabajo.getSelectedRow();
        if(numFila<0){
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");   
        }else{
            confirmacion1 = JOptionPane.showConfirmDialog(null,
                    "Â¡La fila se eliminarÃ¡ de forma permanente!", "Eliminar", JOptionPane.DEFAULT_OPTION);
            confirmacion2= true;          
        }
        if(confirmacion2==true){
            modeloTabla.removeRow(numFila);
            JOptionPane.showMessageDialog(null, "Fila eliminada");
        }else{
            JOptionPane.showMessageDialog(null, "Eliminacion cancelada");
        }
    }//GEN-LAST:event_BotonVaciarActionPerformed

    @SuppressWarnings("empty-statement")
    private void BotonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEditarActionPerformed
        // TODO add your handling code here:
        numFila = Tablatrabajo.getSelectedRow();
        if(numFila<0){
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");   
        }else{
            int seleccion = Tablatrabajo.getSelectedRow();
            RecibirApellidos.setText(Tablatrabajo.getValueAt(seleccion,0).toString());
            RecibirNombres.setText(Tablatrabajo.getValueAt(seleccion,1).toString());
            RecibirEstaCivil.setSelectedItem(Tablatrabajo.getValueAt(seleccion,2).toString());
            RecibirHoras.setText(Tablatrabajo.getValueAt(seleccion,3).toString());
            RecibirValorHora.setText(Tablatrabajo.getValueAt(seleccion, 4).toString());
            numFila = seleccion;
        
            numFila = Tablatrabajo.getSelectedRow();
            modeloTabla.removeRow(numFila); 
        }
    }//GEN-LAST:event_BotonEditarActionPerformed

    private void CalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalendarActionPerformed
        // TODO add your handling code here:
        Calendario newframe = new Calendario();
        
        newframe.setVisible(true);
        
    }//GEN-LAST:event_CalendarActionPerformed

    private void BotonBorrartablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBorrartablaActionPerformed
        // TODO add your handling code here:
        numFila = Tablatrabajo.getRowCount();
        for (int i = numFila -1; i >= 0; i--) {
            modeloTabla.removeRow(i);
        }
    }//GEN-LAST:event_BotonBorrartablaActionPerformed

    private void BtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtonGuardarActionPerformed
        // TODO add your handling code here:
        try {
            archivo2 = new FileOutputStream ("Guardar Datos.pdf");
            PdfWriter.getInstance(documento2, archivo2);
            documento2.open();
            titulo2.setAlignment(1);
            
            documento2.add(titulo2);
            documento2.add(Chunk.NEWLINE);
            documento2.add(new Paragraph("Datos de trabajadores"));
            
            documento2.add(Chunk.NEWLINE);
            documento2.add(new Paragraph("Fecha:" + fechaActual()));
            documento2.add(Chunk.NEWLINE);
            
            PdfPTable tabla;
            tabla = new PdfPTable(Tablatrabajo.getColumnCount());
              
            PdfPCell columnHeader;
            
            for (int column = 0; column < Tablatrabajo.getColumnCount(); column++) {
                columnHeader = new PdfPCell(new Phrase(Tablatrabajo.getColumnName(column)));
                columnHeader.setHorizontalAlignment(Element.ALIGN_CENTER);
                tabla.addCell(columnHeader);
            }
            tabla.setHeaderRows(1);
                    
            for (int row = 0; row < Tablatrabajo.getRowCount(); row++) {
                for (int column = 0; column < Tablatrabajo.getColumnCount(); column++) {
                    tabla.addCell(Tablatrabajo.getValueAt(row, column).toString());
                }
            }

            documento2.add(tabla);
    
            documento2.close();
            
        } catch (FileNotFoundException | DocumentException e) {
            JOptionPane.showMessageDialog(null, "Error al guardar datos" + e.getMessage());
        }
    }//GEN-LAST:event_BtonGuardarActionPerformed

    private void BotonReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonReporteActionPerformed
        // TODO add your handling code here:
        try {
            archivo = new FileOutputStream ("Reporte de trabajadores.pdf");
            PdfWriter.getInstance(documento, archivo);
            documento.open();
            titulo.setAlignment(1);
            
            documento.add(titulo);
            documento.add(Chunk.NEWLINE);
            documento.add(new Paragraph("Reporte de trabajadores"));
            
            documento.add(Chunk.NEWLINE);
            
            Paragraph texto = new Paragraph("El presente documento ha sido realizado para brindar"
                    + " un breve reporte sobre el pago a los trabajadores de la empresa \"Molinos"
                    + " COMOLSA\" para lo cuÃ¡l se presentarÃ¡ la siguiente tabla donde se especificarÃ¡"
                    + " los datos de los trabajadores:");
            texto.setAlignment(Element.ALIGN_JUSTIFIED);
            documento.add(texto);
            
            documento.add(Chunk.NEWLINE);
            documento.add(new Paragraph("Fecha:" + fechaActual()));
            documento.add(Chunk.NEWLINE);
            
            PdfPTable tabla;
            tabla = new PdfPTable(Tablatrabajo.getColumnCount());

              
            PdfPCell columnHeader;
            
            for (int column = 0; column < Tablatrabajo.getColumnCount(); column++) {
                columnHeader = new PdfPCell(new Phrase(Tablatrabajo.getColumnName(column)));
                columnHeader.setHorizontalAlignment(Element.ALIGN_CENTER);
                tabla.addCell(columnHeader);
            }
            tabla.setHeaderRows(1);
                    
            for (int row = 0; row < Tablatrabajo.getRowCount(); row++) {
                for (int column = 0; column < Tablatrabajo.getColumnCount(); column++) {
                    tabla.addCell(Tablatrabajo.getValueAt(row, column).toString());
                }
            }

            documento.add(tabla);
    
            documento.close();
            
            JOptionPane.showMessageDialog(null, "Archivo creado");
            
        } catch (FileNotFoundException | DocumentException e) {
            JOptionPane.showMessageDialog(null, "Error al crear el reporte" + e.getMessage());
        }
        
    }//GEN-LAST:event_BotonReporteActionPerformed

    private void BtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtonCancelarActionPerformed
        // TODO add your handling code here:Ã§
        JFrame frame = new JFrame("EXIT");
        if(JOptionPane.showConfirmDialog(frame, "Confirma si quieres salir del programa", "Cancelar", 
                JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_BtonCancelarActionPerformed

    private void BotonCobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCobrarActionPerformed
        // TODO add your handling code here:
            try {
            
            String apell, nom, estaciv, hora, valu,suelneto, boni, desc, suelbruto;
            
            numFila = Tablatrabajo.getSelectedRow();
            if(numFila<0){
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila");   
            }else{
                int seleccion = Tablatrabajo.getSelectedRow();
                apell = Tablatrabajo.getValueAt(seleccion,0).toString();
                nom = Tablatrabajo.getValueAt(seleccion,1).toString();
                estaciv = Tablatrabajo.getValueAt(seleccion,2).toString();
                hora = Tablatrabajo.getValueAt(seleccion,3).toString();
                valu = Tablatrabajo.getValueAt(seleccion, 4).toString();
                suelbruto = Tablatrabajo.getValueAt(seleccion, 5).toString();
                desc = Tablatrabajo.getValueAt(seleccion, 6).toString();
                boni = Tablatrabajo.getValueAt(seleccion, 7).toString();
                suelneto = Tablatrabajo.getValueAt(seleccion, 8).toString();
                numFila = seleccion;
                numFila = Tablatrabajo.getSelectedRow();

            
            archivo1 = new FileOutputStream ("Cheque de pago de " + apell + " " + nom + ".pdf");
            PdfWriter.getInstance(documento1, archivo1);
            documento1.open();
            titulo1.setAlignment(1);
            
            documento1.add(titulo1);
            documento1.add(Chunk.NEWLINE);

            documento1.add(new Paragraph("MOLINOS COMOLSA"));
            documento1.add(Chunk.NEWLINE);
            documento1.add(new Paragraph("Fecha:" + fechaActual()));
            documento1.add(Chunk.NEWLINE);
            documento1.add(new Paragraph("Apellidos y Nombres: " + apell +" " + nom));
            documento1.add(new Paragraph("Estado civil: " + estaciv));
            documento1.add(new Paragraph("Horas trabajadas: " + hora));
            documento1.add(new Paragraph("Valor por hora trabajada: " + valu));
            
            documento1.add(Chunk.NEWLINE);
            
            documento1.add(new Paragraph("Sueldo bruto generado: " + suelbruto));
            documento1.add(Chunk.NEWLINE);
            documento1.add(new Paragraph("Descuento de ley por aporte al SNP: " + desc));
            documento1.add(new Paragraph("BonificaciÃ³n: " + boni));
            documento1.add(Chunk.NEWLINE);
            documento1.add(new Paragraph("Sueldo neto generado: " + suelneto));
            
            documento1.add(Chunk.NEWLINE);
            
            documento1.add(new Paragraph("Pagar a " + apell + " " + nom + " la suma de " + suelneto + " soles"));

            JOptionPane.showMessageDialog(null, "Cheque generado para el usuario");
            
            }
            
            documento1.close();
            
        } catch (FileNotFoundException | DocumentException e) {
            JOptionPane.showMessageDialog(null, "Error al crear el cheque" + e.getMessage());
        }
    
    }//GEN-LAST:event_BotonCobrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Comolsa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Comolsa().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Apellidos;
    private javax.swing.JButton BotonBorrartabla;
    private javax.swing.JButton BotonCobrar;
    private javax.swing.JButton BotonEditar;
    private javax.swing.JButton BotonReporte;
    private javax.swing.JButton BotonVaciar;
    private javax.swing.JButton Botonguardar;
    private javax.swing.JButton BtonCancelar;
    private javax.swing.JButton BtonGuardar;
    private javax.swing.JButton Calendar;
    private javax.swing.JLabel Estadosciviles;
    private javax.swing.JLabel Horasdetrabajo;
    private javax.swing.JLabel Nombres;
    private javax.swing.JTextField RecibirApellidos;
    private javax.swing.JComboBox<String> RecibirEstaCivil;
    private javax.swing.JTextField RecibirHoras;
    private javax.swing.JTextField RecibirNombres;
    private javax.swing.JTextField RecibirValorHora;
    private javax.swing.JTable Tablatrabajo;
    private javax.swing.JLabel Valordehoras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
